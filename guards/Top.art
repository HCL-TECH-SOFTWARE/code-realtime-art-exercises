capsule Top {   
    [[rt::decl]]
    `
        float lastData = 0;    
        void logTooLow() {
            // TODO: implement me        
        }
    `
    service behavior port comPort : Events;

    statemachine {        
        state InitialState {
            tooLow: on comPort.theEvent
            `
                logTooLow();
            `;
        };
        state StateA {
            tooLow: on comPort.theEvent
            `
                logTooLow();
            `;
        };
        state StateB {
            tooLow: on comPort.theEvent
            `
                logTooLow();
            `;
        };
        state FinalState;        
        initial -> InitialState
        `
            Log::out << "Initial transition" << std::endl;
        `;        
        t1: InitialState -> StateA on comPort.theEvent
        `
            lastData = *rtdata;
            Log::out << "Transition t1 with data " << *rtdata << std::endl;
        `;        
        t2: StateA -> StateB on comPort.theEvent
        `
            lastData = *rtdata;
            Log::out << "Transition t2 with data " << *rtdata << std::endl;
        `; 
        t3: StateB -> FinalState on comPort.theEvent
        `
            lastData = *rtdata;
            Log::out << "Transition t3 with data " << *rtdata << std::endl;
        `;
    };
};
